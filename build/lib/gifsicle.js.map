{"version":3,"sources":["../../src/lib/gifsicle.js"],"names":["LOG","resize","file","files","delay","colors","args","getGifsicleArgs","optimize","disposal","allArgs","join","stderr","promise","gifsicleBin","on","data","push"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;AAEA,MAAMA,MAAM,oBAAS,SAAT,CAAZ;;eAEe,OAAO;AACpBC,QADoB;AACZC,MADY;AACNC,OADM;AACCC,OADD;AACQC,WAAS;AADjB,CAAP,KAET;AACJ,QAAMC,OAAOC,gBAAgB;AAC3BN,UAD2B;AAE3BI,UAF2B;AAG3BD,SAH2B;AAI3BI,cAAU,CAJiB;AAK3BC,cAAU;AALiB,GAAhB,CAAb;AAOA,QAAMC,UAAU,CAAC,GAAGJ,IAAJ,EAAU,GAAGH,KAAb,EAAoB,IAApB,EAA0BD,IAA1B,CAAhB;AACAF,MAAI,OAAJ,EAAa,UAAb,EAAyBU,QAAQC,IAAR,CAAa,GAAb,CAAzB;AACA,QAAM;AAAEC,UAAF;AAAUC;AAAV,MAAsB,2BAAMC,iBAAN,EAAmBJ,OAAnB,CAA5B;AACAE,SAAOG,EAAP,CAAU,MAAV,EAAmBC,IAAD,IAAU;AAC1BhB,QAAK,GAAEgB,IAAK,EAAZ;AACD,GAFD;AAGA,QAAMH,OAAN;AACD,C;;;;AAED,MAAMN,kBAAkB,CAAC;AACvBN,QADuB;AAEvBI,QAFuB;AAGvBG,UAHuB;AAIvBJ,OAJuB;AAKvBK;AALuB,IAMrB,EANoB,KAMb;AACT,QAAMH,OAAO,CAAC,iBAAD,CAAb;AACA,MAAIL,MAAJ,EAAYK,KAAKW,IAAL,CAAU,UAAV,EAAuB,GAAEhB,MAAO,IAAhC;AACZ,MAAII,MAAJ,EAAYC,KAAKW,IAAL,CAAU,UAAV,EAAsBZ,MAAtB;AACZ,MAAIG,QAAJ,EAAcF,KAAKW,IAAL,CAAW,cAAaT,QAAS,EAAjC;AACd,MAAIJ,KAAJ,EAAWE,KAAKW,IAAL,CAAU,SAAV,EAAqBb,QAAQ,EAA7B;AACX,MAAIK,QAAJ,EAAcH,KAAKW,IAAL,CAAU,YAAV,EAAwBR,QAAxB;AACd,SAAOH,IAAP;AACD,CAdD","sourcesContent":["import spawn from 'spawncommand'\nimport gifsicleBin from 'gifsicle'\nimport { debuglog } from 'util'\n\nconst LOG = debuglog('appshot')\n\nexport default async ({\n  resize, file, files, delay, colors = 256,\n}) => {\n  const args = getGifsicleArgs({\n    resize,\n    colors,\n    delay,\n    optimize: 3,\n    disposal: 'background',\n  })\n  const allArgs = [...args, ...files, '-o', file]\n  LOG('%s %s', 'gifsicle', allArgs.join(' '))\n  const { stderr, promise } = spawn(gifsicleBin, allArgs)\n  stderr.on('data', (data) => {\n    LOG(`${data}`)\n  })\n  await promise\n}\n\nconst getGifsicleArgs = ({\n  resize,\n  colors,\n  optimize,\n  delay,\n  disposal,\n} = {}) => {\n  const args = ['--no-extensions']\n  if (resize) args.push('--resize', `${resize}x_`)\n  if (colors) args.push('--colors', colors)\n  if (optimize) args.push(`--optimize=${optimize}`)\n  if (delay) args.push('--delay', delay / 10)\n  if (disposal) args.push('--disposal', disposal)\n  return args\n}\n"],"file":"gifsicle.js"}