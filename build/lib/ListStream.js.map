{"version":3,"sources":["../../src/lib/ListStream.js"],"names":["LOG","ListStream","Transform","constructor","app","title","noEmpty","delay","objectMode","are","RegExp","tre","wi","WindowInfo","pipe","_destroy","err","destroy","_transform","data","encoding","next","date","Date","getMinutes","getSeconds","getMilliseconds","d","filter","a","test","t","push"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;AAEA,MAAMA,MAAM,oBAAS,SAAT,CAAZ;;AAEe,MAAMC,UAAN,SAAyBC,iBAAzB,CAAmC;AAChDC,cAAY;AAAEC,OAAF;AAAOC,SAAP;AAAcC,WAAd;AAAuBC;AAAvB,GAAZ,EAA4C;AAC1C,UAAM;AACJC,kBAAY;AADR,KAAN;AAGA,SAAKJ,GAAL,GAAWA,GAAX;AACA,SAAKC,KAAL,GAAaA,KAAb;AACA,SAAKI,GAAL,GAAWL,OAAO,IAAIM,MAAJ,CAAWN,GAAX,EAAgB,GAAhB,CAAlB;AACA,SAAKO,GAAL,GAAWN,SAAS,IAAIK,MAAJ,CAAWL,KAAX,EAAkB,GAAlB,CAApB;AACA,SAAKC,OAAL,GAAeA,OAAf;AAEA,SAAKM,EAAL,GAAU,IAAIC,mBAAJ,CAAe;AACvBN;AADuB,KAAf,CAAV;AAGA,SAAKK,EAAL,CAAQE,IAAR,CAAa,IAAb;AACD;;AACDC,WAASC,GAAT,EAAc;AACZ,SAAKJ,EAAL,CAAQK,OAAR,CAAgBD,GAAhB;AACD;;AACDE,aAAWC,IAAX,EAAiBC,QAAjB,EAA2BC,IAA3B,EAAiC;AAC/BA;AACA,UAAMC,OAAO,IAAIC,IAAJ,EAAb;AACAvB,QAAI,oBAAJ,EAA0BsB,KAAKE,UAAL,EAA1B,EAA6CF,KAAKG,UAAL,EAA7C,EAAgEH,KAAKI,eAAL,EAAhE;AACA,UAAMC,IAAIR,KACPS,MADO,CACA,CAAC,GAAEC,CAAF,CAAD,KAAU;AAChB,UAAI,CAAC,KAAKzB,GAAV,EAAe,OAAO,IAAP;AACf,aAAO,KAAKK,GAAL,CAASqB,IAAT,CAAcD,CAAd,CAAP;AACD,KAJO,EAKPD,MALO,CAKA,CAAC,IAAGG,CAAH,CAAD,KAAW;AACjB,UAAI,CAACA,CAAD,IAAM,KAAKzB,OAAf,EAAwB,OAAO,KAAP;AACxB,UAAI,CAAC,KAAKD,KAAV,EAAiB,OAAO,IAAP;AACjB,aAAO,KAAKM,GAAL,CAASmB,IAAT,CAAcC,CAAd,CAAP;AACD,KATO,CAAV;AAUA,SAAKC,IAAL,CAAUL,CAAV;AACD;;AAlC+C","sourcesContent":["import WindowInfo from 'window-info'\nimport { Transform } from 'stream'\nimport { debuglog } from 'util'\n\nconst LOG = debuglog('appshot')\n\nexport default class ListStream extends Transform {\n  constructor({ app, title, noEmpty, delay }) {\n    super({\n      objectMode: true,\n    })\n    this.app = app\n    this.title = title\n    this.are = app && new RegExp(app, 'i')\n    this.tre = title && new RegExp(title, 'i')\n    this.noEmpty = noEmpty\n\n    this.wi = new WindowInfo({\n      delay,\n    })\n    this.wi.pipe(this)\n  }\n  _destroy(err) {\n    this.wi.destroy(err)\n  }\n  _transform(data, encoding, next) {\n    next()\n    const date = new Date()\n    LOG('<LIST at %s:%s.%s>', date.getMinutes(), date.getSeconds(), date.getMilliseconds())\n    const d = data\n      .filter(([,a]) => {\n        if (!this.app) return true\n        return this.are.test(a)\n      })\n      .filter(([,,t]) => {\n        if (!t && this.noEmpty) return false\n        if (!this.title) return true\n        return this.tre.test(t)\n      })\n    this.push(d)\n  }\n}\n"],"file":"ListStream.js"}