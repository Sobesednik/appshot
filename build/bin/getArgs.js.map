{"version":3,"sources":["../../src/bin/getArgs.js"],"names":["find","argv","long","short","bool","sre","RegExp","lre","found","a","test","i","indexOf","ia","value","first","simpleTitle","startsWith","undefined","list","app","title","delay","file","wait","noEmpty","resize","colors","parseInt","screenshotDir"],"mappings":";;;;;;;AAAA,MAAMA,OAAO,CAACC,IAAD,EAAOC,IAAP,EAAaC,KAAb,EAAoBC,IAApB,KAA6B;AACxC,QAAMC,MAAM,IAAIC,MAAJ,CAAY,IAAGH,KAAM,EAArB,CAAZ;AACA,QAAMI,MAAM,IAAID,MAAJ,CAAY,KAAIJ,IAAK,EAArB,CAAZ;AACA,QAAMM,QAAQP,KAAKD,IAAL,CAAUS,KAAMJ,IAAIK,IAAJ,CAASD,CAAT,KAAeF,IAAIG,IAAJ,CAASD,CAAT,CAA/B,CAAd;AACA,MAAI,CAACD,KAAL,EAAY;AACZ,MAAIJ,IAAJ,EAAU,OAAO,IAAP;AACV,QAAMO,IAAIV,KAAKW,OAAL,CAAaJ,KAAb,CAAV;AACA,QAAMK,KAAKF,IAAI,CAAf;AACA,QAAMG,QAAQb,KAAKY,EAAL,CAAd;AACA,SAAOC,KAAP;AACD,CAVD;;eAYe,CAAC,IAAK,GAAGb,IAAR,CAAD,KAAoB;AACjC;AACA,QAAM,CAACc,KAAD,IAAUd,IAAhB;AACA,QAAMe,cAAcD,SAASA,MAAME,UAAN,CAAiB,GAAjB,CAAT,GAAiCC,SAAjC,GAA6CH,KAAjE;AACA,QAAMI,OAAOnB,KAAKC,IAAL,EAAW,MAAX,EAAmB,GAAnB,EAAwB,IAAxB,CAAb;AAEA,QAAMmB,MAAMpB,KAAKC,IAAL,EAAW,KAAX,EAAkB,GAAlB,CAAZ;AACA,QAAMoB,QAAQrB,KAAKC,IAAL,EAAW,OAAX,EAAoB,GAApB,CAAd;AACA,QAAMqB,QAAQtB,KAAKC,IAAL,EAAW,OAAX,EAAoB,GAApB,CAAd;AACA,QAAMsB,OAAOvB,KAAKC,IAAL,EAAW,MAAX,EAAmB,GAAnB,CAAb;AACA,QAAMuB,OAAOxB,KAAKC,IAAL,EAAW,MAAX,EAAmB,GAAnB,CAAb;AACA,QAAMwB,UAAUzB,KAAKC,IAAL,EAAW,UAAX,EAAuB,GAAvB,CAAhB;AACA,QAAMyB,SAAS1B,KAAKC,IAAL,EAAW,QAAX,EAAqB,GAArB,CAAf;AACA,QAAM0B,SAAS3B,KAAKC,IAAL,EAAW,QAAX,EAAqB,GAArB,CAAf;AAEA,SAAO;AACL;;;AAGAkB,QAJK;;AAKL;;;AAGAC,OARK;;AASL;;;AAGAC,WAAOA,SAASL,WAZX;AAaLM,SAbK;AAcLC,QAdK;AAeLE,WAfK;AAgBLD,UAAMA,OAAOI,SAASJ,IAAT,CAAP,GAAwBA,IAhBzB;AAiBLK,mBAAeX,SAjBV;AAkBLQ,UAlBK;AAmBLC;AAnBK,GAAP;AAqBD,C","sourcesContent":["const find = (argv, long, short, bool) => {\n  const sre = new RegExp(`-${short}`)\n  const lre = new RegExp(`--${long}`)\n  const found = argv.find(a => (sre.test(a) || lre.test(a)))\n  if (!found) return\n  if (bool) return true\n  const i = argv.indexOf(found)\n  const ia = i + 1\n  const value = argv[ia]\n  return value\n}\n\nexport default ([ ,, ...argv ]) => {\n  /** @type {string} */\n  const [first] = argv\n  const simpleTitle = first && first.startsWith('-') ? undefined : first\n  const list = find(argv, 'list', 'l', true)\n\n  const app = find(argv, 'app', 'a')\n  const title = find(argv, 'title', 't')\n  const delay = find(argv, 'delay', 'y')\n  const file = find(argv, 'file', 'f')\n  const wait = find(argv, 'wait', 'w')\n  const noEmpty = find(argv, 'no-empty', 'e')\n  const resize = find(argv, 'resize', 'z')\n  const colors = find(argv, 'colors', 'c')\n\n  return {\n    /**\n     * Should the program just list results instead of taking a recording.\n     */\n    list,\n    /**\n     * App name to filter by.\n     */\n    app,\n    /**\n     * Window title to filter by.\n     */\n    title: title || simpleTitle,\n    delay,\n    file,\n    noEmpty,\n    wait: wait ? parseInt(wait) : wait,\n    screenshotDir: undefined,\n    resize,\n    colors,\n  }\n}\n"],"file":"getArgs.js"}