{"version":3,"sources":["../../src/bin/index.js"],"names":["list","app","title","file","delay","wait","noEmpty","resize","colors","process","argv"],"mappings":"AAAA;;;AACA;;AACA;;AACA;;;;AAEA,MAAM;AACJA,MADI;AAEJC,KAFI;AAGJC,OAHI;AAIJC,MAJI;AAKJC,UAAQ,IALJ;AAMJC,SAAO,CANH;AAOJC,SAPI;AAQJC,QARI;AASJC;AATI,IAUF,sBAAQC,QAAQC,IAAhB,CAVJ;;AAYC,CAAC,YAAY;AACZ,MAAIV,IAAJ,EAAU;AACR,UAAM,mBAAK;AACTC,SADS;AAETC,WAFS;AAGTE,WAHS;AAITE;AAJS,KAAL,CAAN;AAMD,GAPD,MAOO;AACL,UAAM,sBAAQ;AACZD,UADY;AAEZF,UAFY;AAGZF,SAHY;AAIZC,WAJY;AAKZE,WALY;AAMZG,YANY;AAOZC;AAPY,KAAR,CAAN;AASD;AACF,CAnBA,I,CAqBD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["#!/usr/bin/env node\nimport getArgs from './getArgs'\nimport Capture from './Capture'\nimport List from './List'\n\nconst {\n  list,\n  app,\n  title,\n  file,\n  delay = 1000,\n  wait = 2,\n  noEmpty,\n  resize,\n  colors,\n} = getArgs(process.argv)\n\n;(async () => {\n  if (list) {\n    await List({\n      app,\n      title,\n      delay,\n      noEmpty,\n    })\n  } else {\n    await Capture({\n      wait,\n      file,\n      app,\n      title,\n      delay,\n      resize,\n      colors,\n    })\n  }\n})()\n\n// function focus(app) {\n//   console.error('focusing on the app %s', app)\n//   const activePath = path.join(__dirname, '../etc/active.py')\n//   return new Promise((resolve, reject) => {\n//     const active = cp.spawn(activePath, [\n//       '--app',\n//       app,\n//     ], {})\n//     active.on('exit', (code) => {\n//       if (code !== 0) {\n//         return reject(new Error(code))\n//       }\n//       return resolve()\n//     })\n//   })\n// }\n"],"file":"index.js"}