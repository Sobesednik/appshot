{"version":3,"sources":["../../src/bin/List.js"],"names":["List","config","app","title","noEmpty","delay","live","ls","ListStream","Transform","transform","buffer","encoding","next","push","destroy","objectMode","TableStream","process","stdout"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;AAEA;;;;;;;;;AASA;;;AAGe,eAAeA,IAAf,CAAoBC,SAAS,EAA7B,EAAiC;AAC9C,QAAM;AACJC,OADI;AACCC,SADD;AACQC,WADR;AACiBC,SADjB;AACwBC;AADxB,MAEFL,MAFJ;AAIA,QAAMM,KAAK,IAAIC,mBAAJ,CAAe;AAAEN,OAAF;AAAOC,SAAP;AAAcG,QAAd;AAAoBF,WAApB;AAA6BC;AAA7B,GAAf,CAAX;AACA,qBACEE,EADF,EAEE,IAAIE,iBAAJ,CAAc;AACZC,cAAUC,MAAV,EAAkBC,QAAlB,EAA4BC,IAA5B,EAAkC;AAChC,WAAKC,IAAL,CAAUH,MAAV;;AACA,UAAI,CAACL,IAAL,EAAW;AACTC,WAAGQ,OAAH;AACD,OAFD,MAEO;AACLF;AACD;AACF,KARW;;AASZG,gBAAY;AATA,GAAd,CAFF,EAaE,IAAIC,cAAJ,EAbF,EAcEC,QAAQC,MAdV;AAgBD","sourcesContent":["import { Transform } from 'stream'\nimport pump from 'pump'\nimport ListStream from '../lib/ListStream'\nimport TableStream from '../lib/table'\n\n/**\n * @typedef {Object} ListConfig\n * @property {string} [app] An app name\n * @property {string} [title] A window title\n * @property {boolean} [noEmpty=true] Skip empty window titles\n * @property {boolean} [live=false] Continue retrieving the list\n * @property {number} [delay=1000] How often in ms to capture windows in live mode. Default 1000ms.\n */\n\n/**\n * @param {ListConfig} config\n */\nexport default async function List(config = {}) {\n  const {\n    app, title, noEmpty, delay, live,\n  } = config\n\n  const ls = new ListStream({ app, title, live, noEmpty, delay })\n  pump(\n    ls,\n    new Transform({\n      transform(buffer, encoding, next) {\n        this.push(buffer)\n        if (!live) {\n          ls.destroy()\n        } else {\n          next()\n        }\n      },\n      objectMode: true,\n    }),\n    new TableStream(),\n    process.stdout,\n  )\n}\n"],"file":"List.js"}